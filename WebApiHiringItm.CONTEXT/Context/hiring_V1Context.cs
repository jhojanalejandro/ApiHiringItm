// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using WebApiHiringItm.CONTEXT.Context;
using WebApiHiringItm.MODEL.Entities;

namespace WebApiHiringItm.CONTEXT.Context
{
    public partial class Hiring_V1Context : DbContext, IHiring_V1Context
    {
        public Hiring_V1Context()
        {
        }

        public Hiring_V1Context(DbContextOptions<Hiring_V1Context> options)
            : base(options)
        {
        }

        public virtual DbSet<Contractor> Contractor { get; set; }
        public virtual DbSet<Files> Files { get; set; }
        public virtual DbSet<FolderContractor> FolderContractor { get; set; }
        public virtual DbSet<HiringData> HiringData { get; set; }
        public virtual DbSet<ProjectFolder> ProjectFolder { get; set; }
        public virtual DbSet<Roll> Roll { get; set; }
        public virtual DbSet<UserT> UserT { get; set; }
        public virtual DbSet<ExcelInfo> ExcelInfo { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Contractor>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Arl)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ARL");

                entity.Property(e => e.Barrio)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("BARRIO");

                entity.Property(e => e.Celular)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CELULAR");

                entity.Property(e => e.ClaveUsuario)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Comuna)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("COMUNA");

                entity.Property(e => e.Correo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CORREO");

                entity.Property(e => e.Cuentabancaria)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CUENTABANCARIA");

                entity.Property(e => e.Departamento)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DEPARTAMENTO");

                entity.Property(e => e.Direccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("DIRECCION");

                entity.Property(e => e.DocumentoDeIdentidificacion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Entidadcuentabancaria)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ENTIDADCUENTABANCARIA");

                entity.Property(e => e.Eps)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("EPS");

                entity.Property(e => e.Fechanacimiento)
                    .HasColumnType("date")
                    .HasColumnName("FECHANACIMIENTO");

                entity.Property(e => e.IdFolder).HasColumnName("idFolder");

                entity.Property(e => e.IdUser).HasColumnName("idUser");

                entity.Property(e => e.LugarDeExpedicion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Municipio)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MUNICIPIO");

                entity.Property(e => e.Nacionalidad)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NACIONALIDAD");

                entity.Property(e => e.NombreCompleto)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Pension)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PENSION");

                entity.Property(e => e.Sexo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SEXO");

                entity.Property(e => e.Telefono)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TELEFONO");

                entity.Property(e => e.Tipodecuenta)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("TIPODECUENTA");

                entity.HasOne(d => d.IdFolderNavigation)
                    .WithMany(p => p.Contractor)
                    .HasForeignKey(d => d.IdFolder)
                    .HasConstraintName("FK__Contracto__idFol__36B12243");

                entity.HasOne(d => d.IdUserNavigation)
                    .WithMany(p => p.Contractor)
                    .HasForeignKey(d => d.IdUser)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Contracto__idUse__35BCFE0A");
            });

            modelBuilder.Entity<Files>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.DescriptionFile)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("descriptionFile");

                entity.Property(e => e.Fildata)
                    .IsUnicode(false)
                    .HasColumnName("fildata");

                entity.Property(e => e.FilesName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("filesName");

                entity.Property(e => e.IdContractor).HasColumnName("idContractor");

                entity.Property(e => e.IdFolder).HasColumnName("idFolder");

                entity.Property(e => e.IdUser).HasColumnName("idUser");

                entity.Property(e => e.RegisterDate)
                    .HasColumnType("date")
                    .HasColumnName("registerDate");

                entity.Property(e => e.TypeFile)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("typeFile");

                entity.HasOne(d => d.IdContractorNavigation)
                    .WithMany(p => p.Files)
                    .HasForeignKey(d => d.IdContractor)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Files__idContrac__31EC6D26");

                entity.HasOne(d => d.IdUserNavigation)
                    .WithMany(p => p.Files)
                    .HasForeignKey(d => d.IdUser)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Files__idUser__32E0915F");
            });

            modelBuilder.Entity<FolderContractor>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.DescriptionProject)
                    .IsUnicode(false)
                    .HasColumnName("descriptionProject");

                entity.Property(e => e.FolderName)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("folderName");

                entity.Property(e => e.IdContractor).HasColumnName("idContractor");

                entity.Property(e => e.IdUser).HasColumnName("idUser");

                entity.Property(e => e.ModifyDate)
                    .HasColumnType("date")
                    .HasColumnName("modifyDate");

                entity.Property(e => e.RegisterDate)
                    .HasColumnType("date")
                    .HasColumnName("registerDate");

                entity.HasOne(d => d.IdContractorNavigation)
                    .WithMany(p => p.FolderContractor)
                    .HasForeignKey(d => d.IdContractor)
                    .HasConstraintName("FK__FolderCon__idCon__30F848ED");
            });

            modelBuilder.Entity<HiringData>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Actacomite)
                    .IsUnicode(false)
                    .HasColumnName("ACTACOMITE");

                entity.Property(e => e.Actividad)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ACTIVIDAD");

                entity.Property(e => e.Cargointerventoritm)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CARGOINTERVENTORITM");

                entity.Property(e => e.Componente)
                    .IsUnicode(false)
                    .HasColumnName("COMPONENTE");

                entity.Property(e => e.Compromiso)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("COMPROMISO");

                entity.Property(e => e.Consecutivo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CONSECUTIVO");

                entity.Property(e => e.Contrato)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CONTRATO");

                entity.Property(e => e.Convenio)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CONVENIO");

                entity.Property(e => e.Cpc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CPC");

                entity.Property(e => e.Ejecucion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("EJECUCION");

                entity.Property(e => e.Encabezado)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ENCABEZADO");

                entity.Property(e => e.Entidad)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ENTIDAD");

                entity.Property(e => e.Entidadaseguradora)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ENTIDADASEGURADORA");

                entity.Property(e => e.Fechadecomite)
                    .HasColumnType("date")
                    .HasColumnName("FECHADECOMITE");

                entity.Property(e => e.Fechadecontrato)
                    .HasColumnType("date")
                    .HasColumnName("FECHADECONTRATO");

                entity.Property(e => e.Fechadeinicioproyectado)
                    .HasColumnType("date")
                    .HasColumnName("FECHADEINICIOPROYECTADO");

                entity.Property(e => e.Fechadeterminaciónampliacion)
                    .HasColumnType("date")
                    .HasColumnName("FECHADETERMINACIÓNAMPLIACION");

                entity.Property(e => e.Fechaexapreocupacionales)
                    .HasColumnType("date")
                    .HasColumnName("FECHAEXAPREOCUPACIONALES");

                entity.Property(e => e.Fechaexpedicionpoliza)
                    .HasColumnType("date")
                    .HasColumnName("FECHAEXPEDICIONPOLIZA");

                entity.Property(e => e.Fechafinalizacion)
                    .HasColumnType("date")
                    .HasColumnName("FECHAFINALIZACION");

                entity.Property(e => e.Fechafinalizaciónconvenio)
                    .HasColumnType("date")
                    .HasColumnName("FECHAFINALIZACIÓNCONVENIO");

                entity.Property(e => e.Fechainicioampliacion)
                    .HasColumnType("date")
                    .HasColumnName("FECHAINICIOAMPLIACION");

                entity.Property(e => e.Fechainicioconvenio)
                    .HasColumnType("date")
                    .HasColumnName("FECHAINICIOCONVENIO");

                entity.Property(e => e.Fecharealdeinicio)
                    .HasColumnType("date")
                    .HasColumnName("FECHAREALDEINICIO");

                entity.Property(e => e.Honorariosmensuales)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("HONORARIOSMENSUALES");

                entity.Property(e => e.IdContractor).HasColumnName("idContractor");

                entity.Property(e => e.IdUser).HasColumnName("idUser");

                entity.Property(e => e.Interventoritm)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("INTERVENTORITM");

                entity.Property(e => e.Laboral)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("LABORAL");

                entity.Property(e => e.Nivel).HasColumnName("NIVEL");

                entity.Property(e => e.Noadicion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NOADICION");

                entity.Property(e => e.Nombrecpc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBRECPC");

                entity.Property(e => e.Nombredelrubro)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOMBREDELRUBRO");

                entity.Property(e => e.Nopoliza)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("NOPOLIZA");

                entity.Property(e => e.Objeto)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("OBJETO");

                entity.Property(e => e.Objetoconvenio)
                    .IsUnicode(false)
                    .HasColumnName("OBJETOCONVENIO");

                entity.Property(e => e.Obligacionesespecificas)
                    .IsUnicode(false)
                    .HasColumnName("OBLIGACIONESESPECIFICAS");

                entity.Property(e => e.Obligacionesgenerales)
                    .IsUnicode(false)
                    .HasColumnName("OBLIGACIONESGENERALES");

                entity.Property(e => e.Profesional)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PROFESIONAL");

                entity.Property(e => e.Requierepoliza).HasColumnName("REQUIEREPOLIZA");

                entity.Property(e => e.Rubropresupuestal)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("RUBROPRESUPUESTAL");

                entity.Property(e => e.Talentohumano)
                    .IsUnicode(false)
                    .HasColumnName("TALENTOHUMANO");

                entity.Property(e => e.Valorasegurado)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("VALORASEGURADO");

                entity.Property(e => e.Valortotaldelcontrato)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("VALORTOTALDELCONTRATO");

                entity.Property(e => e.Vigenciafinal)
                    .HasColumnType("date")
                    .HasColumnName("VIGENCIAFINAL");

                entity.Property(e => e.Vigenciainicial)
                    .HasColumnType("date")
                    .HasColumnName("VIGENCIAINICIAL");

                entity.HasOne(d => d.IdContractorNavigation)
                    .WithMany(p => p.HiringData)
                    .HasForeignKey(d => d.IdContractor)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__HiringDat__idCon__34C8D9D1");

                entity.HasOne(d => d.IdUserNavigation)
                    .WithMany(p => p.HiringData)
                    .HasForeignKey(d => d.IdUser)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__HiringDat__idUse__33D4B598");
            });

            modelBuilder.Entity<ProjectFolder>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CompanyName)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.DescriptionProject)
                    .IsUnicode(false)
                    .HasColumnName("descriptionProject");

                entity.Property(e => e.IdUser).HasColumnName("idUser");

                entity.Property(e => e.ModifyDate)
                    .HasColumnType("date")
                    .HasColumnName("modifyDate");

                entity.Property(e => e.ProjectName)
                    .IsRequired()
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("projectName");

                entity.Property(e => e.RegisterDate)
                    .HasColumnType("date")
                    .HasColumnName("registerDate");

                entity.HasOne(d => d.IdUserNavigation)
                    .WithMany(p => p.ProjectFolder)
                    .HasForeignKey(d => d.IdUser)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ProjectFo__idUse__300424B4");
            });

            modelBuilder.Entity<Roll>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.RollName)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("rollName");
            });

            modelBuilder.Entity<UserT>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Avatar)
                    .IsUnicode(false)
                    .HasColumnName("avatar");

                entity.Property(e => e.IdRoll).HasColumnName("idRoll");

                entity.Property(e => e.PhoneNumber)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("phoneNumber");

                entity.Property(e => e.Professionalposition)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("professionalposition");

                entity.Property(e => e.UserEmail)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("userEmail");

                entity.Property(e => e.UserName)
                    .IsRequired()
                    .HasMaxLength(30)
                    .HasColumnName("userName");

                entity.Property(e => e.UserPassword)
                    .IsRequired()
                    .HasMaxLength(30)
                    .HasColumnName("userPassword");

                entity.HasOne(d => d.IdRollNavigation)
                    .WithMany(p => p.UserT)
                    .HasForeignKey(d => d.IdRoll)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__UserT__idRoll__37A5467C");
            });

            modelBuilder.Entity<ExcelInfo>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Apellido).HasMaxLength(30);

                entity.Property(e => e.Arl)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Bachiller)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Barrio)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Celular)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Componente)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Comuna)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Convenio).HasColumnType("numeric(15, 0)");

                entity.Property(e => e.Correo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CuentaBancaria)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Departamento)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Direccion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Doctorado)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DocumentoDeIdentificacion).HasColumnType("numeric(15, 0)");

                entity.Property(e => e.Entidad)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EntidadCuentaBancaria)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Eps)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Especializacion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FechaActualizacion).HasColumnType("date");

                entity.Property(e => e.FechaCreacion).HasColumnType("date");

                entity.Property(e => e.FechaFinalizacionConvenio).HasColumnType("date");

                entity.Property(e => e.FechaInicioConvenio).HasColumnType("date");

                entity.Property(e => e.FechaNacimiento).HasColumnType("date");

                entity.Property(e => e.LugarDeExpedicion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Maestria)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Municipio)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Nacionalidad)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Nombre)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ObjetoConvenio).IsUnicode(false);

                entity.Property(e => e.Pension).HasMaxLength(30);

                entity.Property(e => e.Pregrado)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Sexo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TalentoHumano)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Tecnico)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Tecnologo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Telefono)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TipoDeCuenta)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}