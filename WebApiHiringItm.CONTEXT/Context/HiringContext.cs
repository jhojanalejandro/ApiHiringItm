// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using WebApiHiringItm.MODEL.Entities;

namespace WebApiHiringItm.CONTEXT.Context
{
    public partial class HiringContext : DbContext, IHiringContext
    {
        public HiringContext()
        {
        }

        public HiringContext(DbContextOptions<HiringContext> options)
            : base(options)
        {
        }

        public virtual DbSet<AcademicInformation> AcademicInformation { get; set; }
        public virtual DbSet<Activity> Activity { get; set; }
        public virtual DbSet<AssigmentContract> AssigmentContract { get; set; }
        public virtual DbSet<AssignmentType> AssignmentType { get; set; }
        public virtual DbSet<Banks> Banks { get; set; }
        public virtual DbSet<ChangeContractContractor> ChangeContractContractor { get; set; }
        public virtual DbSet<Component> Component { get; set; }
        public virtual DbSet<ContractFolder> ContractFolder { get; set; }
        public virtual DbSet<Contractor> Contractor { get; set; }
        public virtual DbSet<ContractorPaymentSecurity> ContractorPaymentSecurity { get; set; }
        public virtual DbSet<ContractorPayments> ContractorPayments { get; set; }
        public virtual DbSet<CpcType> CpcType { get; set; }
        public virtual DbSet<DetailContract> DetailContract { get; set; }
        public virtual DbSet<DetailContractor> DetailContractor { get; set; }
        public virtual DbSet<DetailFile> DetailFile { get; set; }
        public virtual DbSet<DetailType> DetailType { get; set; }
        public virtual DbSet<DocumentType> DocumentType { get; set; }
        public virtual DbSet<EconomicdataContractor> EconomicdataContractor { get; set; }
        public virtual DbSet<ElementComponent> ElementComponent { get; set; }
        public virtual DbSet<ElementType> ElementType { get; set; }
        public virtual DbSet<EntityHealth> EntityHealth { get; set; }
        public virtual DbSet<Files> Files { get; set; }
        public virtual DbSet<Folder> Folder { get; set; }
        public virtual DbSet<FolderType> FolderType { get; set; }
        public virtual DbSet<HiringData> HiringData { get; set; }
        public virtual DbSet<MinuteType> MinuteType { get; set; }
        public virtual DbSet<NewnessContractor> NewnessContractor { get; set; }
        public virtual DbSet<NewnessType> NewnessType { get; set; }
        public virtual DbSet<Roll> Roll { get; set; }
        public virtual DbSet<RubroType> RubroType { get; set; }
        public virtual DbSet<StatusContract> StatusContract { get; set; }
        public virtual DbSet<StatusContractor> StatusContractor { get; set; }
        public virtual DbSet<StatusFile> StatusFile { get; set; }
        public virtual DbSet<TermContract> TermContract { get; set; }
        public virtual DbSet<TermType> TermType { get; set; }
        public virtual DbSet<UserFile> UserFile { get; set; }
        public virtual DbSet<UserFileType> UserFileType { get; set; }
        public virtual DbSet<UserT> UserT { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AcademicInformation>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.AcademicInformationType)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CollegeDegree).HasMaxLength(100);

                entity.Property(e => e.Institution)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.HasOne(d => d.ContractorNavigation)
                    .WithMany(p => p.AcademicInformation)
                    .HasForeignKey(d => d.Contractor)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__AcademicI__Contr__6B24EA82");
            });

            modelBuilder.Entity<Activity>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.NombreActividad)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.HasOne(d => d.Component)
                    .WithMany(p => p.Activity)
                    .HasForeignKey(d => d.ComponentId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Activity__Compon__7E37BEF6");
            });

            modelBuilder.Entity<AssigmentContract>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.ContractId).HasColumnName("contractId");

                entity.HasOne(d => d.AssignmentTypeNavigation)
                    .WithMany(p => p.AssigmentContract)
                    .HasForeignKey(d => d.AssignmentType)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Assigment__Assig__17036CC0");

                entity.HasOne(d => d.Contract)
                    .WithMany(p => p.AssigmentContract)
                    .HasForeignKey(d => d.ContractId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Assigment__contr__160F4887");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.AssigmentContract)
                    .HasForeignKey(d => d.UserId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Assigment__UserI__151B244E");
            });

            modelBuilder.Entity<AssignmentType>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.AssigmentTypeDescription)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasMaxLength(6);
            });

            modelBuilder.Entity<Banks>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.BankName)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<ChangeContractContractor>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.ElementName).HasMaxLength(100);

                entity.Property(e => e.ElementObject).IsUnicode(false);

                entity.Property(e => e.FinalAdditionDate).HasColumnType("date");

                entity.Property(e => e.InitialAdditionDate).HasColumnType("date");

                entity.Property(e => e.IsModify).HasColumnName("isModify");

                entity.Property(e => e.NoAddition)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.PerfilRequeridoAcademico).IsUnicode(false);

                entity.Property(e => e.PerfilRequeridoExperiencia).IsUnicode(false);

                entity.Property(e => e.RegisterDate)
                    .HasColumnType("date")
                    .HasColumnName("registerDate");

                entity.Property(e => e.Resources).HasColumnType("money");

                entity.Property(e => e.ValueDay).HasColumnType("money");

                entity.HasOne(d => d.DetailContractor)
                    .WithMany(p => p.ChangeContractContractor)
                    .HasForeignKey(d => d.DetailContractorId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ChangeCon__Detai__19DFD96B");

                entity.HasOne(d => d.EconomicdataContractorNavigation)
                    .WithMany(p => p.ChangeContractContractor)
                    .HasForeignKey(d => d.EconomicdataContractor)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ChangeCon__Econo__1AD3FDA4");

                entity.HasOne(d => d.MinuteTypeNavigation)
                    .WithMany(p => p.ChangeContractContractor)
                    .HasForeignKey(d => d.MinuteType)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ChangeCon__Minut__18EBB532");
            });

            modelBuilder.Entity<Component>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.NombreComponente)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.HasOne(d => d.Contract)
                    .WithMany(p => p.Component)
                    .HasForeignKey(d => d.ContractId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Component__Contr__7D439ABD");
            });

            modelBuilder.Entity<ContractFolder>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.CompanyName)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.FuenteRubro).HasMaxLength(50);

                entity.Property(e => e.GastosOperativos).HasColumnType("money");

                entity.Property(e => e.NumberProject)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Project).HasMaxLength(30);

                entity.Property(e => e.ProjectName)
                    .IsRequired()
                    .HasMaxLength(300);

                entity.Property(e => e.ResourceContract).HasColumnType("money");

                entity.Property(e => e.ValorContrato).HasColumnType("money");

                entity.Property(e => e.ValorSubTotal).HasColumnType("money");

                entity.HasOne(d => d.RubroNavigation)
                    .WithMany(p => p.ContractFolder)
                    .HasForeignKey(d => d.Rubro)
                    .HasConstraintName("FK__ContractF__Rubro__70DDC3D8");

                entity.HasOne(d => d.StatusContract)
                    .WithMany(p => p.ContractFolder)
                    .HasForeignKey(d => d.StatusContractId)
                    .HasConstraintName("FK__ContractF__Statu__08B54D69");
            });

            modelBuilder.Entity<Contractor>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Apellidos)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Barrio)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Celular)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ClaveUsuario).HasMaxLength(15);

                entity.Property(e => e.Correo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CuentaBancaria).HasMaxLength(100);

                entity.Property(e => e.Departamento)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Direccion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FechaActualizacion).HasColumnType("date");

                entity.Property(e => e.FechaCreacion).HasColumnType("date");

                entity.Property(e => e.FechaNacimiento).HasColumnType("date");

                entity.Property(e => e.Genero)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Identificacion)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.LugarExpedicion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Municipio)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Nacionalidad)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Nombres)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Telefono)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TipoCuenta).HasMaxLength(30);

                entity.HasOne(d => d.AfpNavigation)
                    .WithMany(p => p.ContractorAfpNavigation)
                    .HasForeignKey(d => d.Afp)
                    .HasConstraintName("FK__Contractor__Afp__6FE99F9F");

                entity.HasOne(d => d.ArlNavigation)
                    .WithMany(p => p.ContractorArlNavigation)
                    .HasForeignKey(d => d.Arl)
                    .HasConstraintName("FK__Contractor__Arl__6EF57B66");

                entity.HasOne(d => d.EntidadCuentaBancariaNavigation)
                    .WithMany(p => p.Contractor)
                    .HasForeignKey(d => d.EntidadCuentaBancaria)
                    .HasConstraintName("FK__Contracto__Entid__6C190EBB");

                entity.HasOne(d => d.EpsNavigation)
                    .WithMany(p => p.ContractorEpsNavigation)
                    .HasForeignKey(d => d.Eps)
                    .HasConstraintName("FK__Contractor__Eps__6E01572D");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Contractor)
                    .HasForeignKey(d => d.UserId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Contracto__UserI__6D0D32F4");
            });

            modelBuilder.Entity<ContractorPaymentSecurity>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.PaymentArl)
                    .HasColumnType("money")
                    .HasColumnName("PaymentARL");

                entity.Property(e => e.PaymentEps).HasColumnType("money");

                entity.Property(e => e.PaymentPension).HasColumnType("money");

                entity.Property(e => e.PaymentPeriodDate).HasColumnType("date");

                entity.Property(e => e.PayrollNumber)
                    .IsRequired()
                    .HasMaxLength(15);

                entity.Property(e => e.RegisterDate).HasColumnType("date");

                entity.HasOne(d => d.ContractorPaymentsNavigation)
                    .WithMany(p => p.ContractorPaymentSecurity)
                    .HasForeignKey(d => d.ContractorPayments)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Contracto__Contr__1EA48E88");
            });

            modelBuilder.Entity<ContractorPayments>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.FromDate).HasColumnType("date");

                entity.Property(e => e.Paymentcant).HasColumnType("money");

                entity.Property(e => e.RegisterDate).HasColumnType("date");

                entity.Property(e => e.ToDate).HasColumnType("date");

                entity.HasOne(d => d.DetailContractorNavigation)
                    .WithMany(p => p.ContractorPayments)
                    .HasForeignKey(d => d.DetailContractor)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Contracto__Detai__02084FDA");

                entity.HasOne(d => d.EconomicdataContractorNavigation)
                    .WithMany(p => p.ContractorPayments)
                    .HasForeignKey(d => d.EconomicdataContractor)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Contracto__Econo__02FC7413");
            });

            modelBuilder.Entity<CpcType>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.CpcName)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.CpcNumber)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<DetailContract>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.ContractId).HasColumnName("contractId");

                entity.Property(e => e.FechaContrato).HasColumnType("date");

                entity.Property(e => e.FechaFinalizacion).HasColumnType("date");

                entity.Property(e => e.ModifyDate).HasColumnType("date");

                entity.Property(e => e.RegisterDate).HasColumnType("date");

                entity.Property(e => e.TipoContrato)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.Contract)
                    .WithMany(p => p.DetailContract)
                    .HasForeignKey(d => d.ContractId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__DetailCon__contr__03F0984C");

                entity.HasOne(d => d.DetailTypeNavigation)
                    .WithMany(p => p.DetailContract)
                    .HasForeignKey(d => d.DetailType)
                    .HasConstraintName("FK__DetailCon__Detai__17F790F9");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.DetailContract)
                    .HasForeignKey(d => d.UserId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__DetailCon__UserI__04E4BC85");
            });

            modelBuilder.Entity<DetailContractor>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.ContractId).HasColumnName("contractId");

                entity.Property(e => e.ContractorId).HasColumnName("contractorId");

                entity.HasOne(d => d.Activity)
                    .WithMany(p => p.DetailContractor)
                    .HasForeignKey(d => d.ActivityId)
                    .HasConstraintName("FK__DetailCon__Activ__7A672E12");

                entity.HasOne(d => d.Component)
                    .WithMany(p => p.DetailContractor)
                    .HasForeignKey(d => d.ComponentId)
                    .HasConstraintName("FK__DetailCon__Compo__797309D9");

                entity.HasOne(d => d.Contract)
                    .WithMany(p => p.DetailContractor)
                    .HasForeignKey(d => d.ContractId)
                    .HasConstraintName("FK__DetailCon__contr__75A278F5");

                entity.HasOne(d => d.Contractor)
                    .WithMany(p => p.DetailContractor)
                    .HasForeignKey(d => d.ContractorId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__DetailCon__contr__76969D2E");

                entity.HasOne(d => d.Element)
                    .WithMany(p => p.DetailContractor)
                    .HasForeignKey(d => d.ElementId)
                    .HasConstraintName("FK__DetailCon__Eleme__787EE5A0");

                entity.HasOne(d => d.HiringData)
                    .WithMany(p => p.DetailContractor)
                    .HasForeignKey(d => d.HiringDataId)
                    .HasConstraintName("FK__DetailCon__Hirin__778AC167");

                entity.HasOne(d => d.StatusContractorNavigation)
                    .WithMany(p => p.DetailContractor)
                    .HasForeignKey(d => d.StatusContractor)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__DetailCon__Statu__7B5B524B");
            });

            modelBuilder.Entity<DetailFile>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Observation).IsUnicode(false);

                entity.Property(e => e.ReasonRejection)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RegisterDate).HasColumnType("date");

                entity.Property(e => e.StatusFileId).HasColumnName("statusFileId");

                entity.HasOne(d => d.Contractor)
                    .WithMany(p => p.DetailFile)
                    .HasForeignKey(d => d.ContractorId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__DetailFil__Contr__114A936A");

                entity.HasOne(d => d.File)
                    .WithMany(p => p.DetailFile)
                    .HasForeignKey(d => d.FileId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__DetailFil__FileI__0F624AF8");

                entity.HasOne(d => d.StatusFile)
                    .WithMany(p => p.DetailFile)
                    .HasForeignKey(d => d.StatusFileId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__DetailFil__statu__0E6E26BF");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.DetailFile)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK__DetailFil__UserI__10566F31");
            });

            modelBuilder.Entity<DetailType>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.DetailTypeDescripcion)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<DocumentType>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.DocumentTypeDescription)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.TypeCode).HasMaxLength(5);
            });

            modelBuilder.Entity<EconomicdataContractor>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Debt).HasColumnType("money");

                entity.Property(e => e.Freed).HasColumnType("money");

                entity.Property(e => e.Missing).HasColumnType("money");

                entity.Property(e => e.ModifyDate).HasColumnType("date");

                entity.Property(e => e.RegisterDate).HasColumnType("date");

                entity.Property(e => e.TotalPayMonth).HasColumnType("money");

                entity.Property(e => e.TotalValue).HasColumnType("money");

                entity.Property(e => e.UnitValue).HasColumnType("money");

                entity.HasOne(d => d.DetailContractor)
                    .WithMany(p => p.EconomicdataContractor)
                    .HasForeignKey(d => d.DetailContractorId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Economicd__Detai__7C4F7684");
            });

            modelBuilder.Entity<ElementComponent>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Consecutivo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.NombreElemento)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.ObjetoElemento).IsUnicode(false);

                entity.Property(e => e.PerfilRequeridoAcademico).IsUnicode(false);

                entity.Property(e => e.PerfilRequeridoExperiencia).IsUnicode(false);

                entity.Property(e => e.Recursos).HasColumnType("money");

                entity.Property(e => e.TipoElemento).HasColumnName("tipoElemento");

                entity.Property(e => e.ValorPorDia).HasColumnType("money");

                entity.Property(e => e.ValorPorDiaContratista).HasColumnType("money");

                entity.Property(e => e.ValorTotal).HasColumnType("money");

                entity.Property(e => e.ValorTotalContratista).HasColumnType("money");

                entity.Property(e => e.ValorUnidad).HasColumnType("money");

                entity.HasOne(d => d.Activity)
                    .WithMany(p => p.ElementComponent)
                    .HasForeignKey(d => d.ActivityId)
                    .HasConstraintName("FK__ElementCo__Activ__00200768");

                entity.HasOne(d => d.Component)
                    .WithMany(p => p.ElementComponent)
                    .HasForeignKey(d => d.ComponentId)
                    .HasConstraintName("FK__ElementCo__Compo__7F2BE32F");

                entity.HasOne(d => d.Cpc)
                    .WithMany(p => p.ElementComponent)
                    .HasForeignKey(d => d.CpcId)
                    .HasConstraintName("FK__ElementCo__CpcId__0A9D95DB");

                entity.HasOne(d => d.TipoElementoNavigation)
                    .WithMany(p => p.ElementComponent)
                    .HasForeignKey(d => d.TipoElemento)
                    .HasConstraintName("FK__ElementCo__tipoE__09A971A2");
            });

            modelBuilder.Entity<ElementType>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.ElementTypeDescription)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<EntityHealth>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.EntityHealthDescription)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<Files>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.DescriptionFile).HasMaxLength(100);

                entity.Property(e => e.FileType)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.Filedata).IsRequired();

                entity.Property(e => e.FilesName)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.MonthPayment).HasMaxLength(10);

                entity.HasOne(d => d.Contract)
                    .WithMany(p => p.Files)
                    .HasForeignKey(d => d.ContractId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Files__ContractI__0C85DE4D");

                entity.HasOne(d => d.DocumentTypeNavigation)
                    .WithMany(p => p.Files)
                    .HasForeignKey(d => d.DocumentType)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Files__DocumentT__0B91BA14");

                entity.HasOne(d => d.Folder)
                    .WithMany(p => p.Files)
                    .HasForeignKey(d => d.FolderId)
                    .HasConstraintName("FK__Files__FolderId__0D7A0286");
            });

            modelBuilder.Entity<Folder>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.FolderName)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.ModifyDate).HasColumnType("date");

                entity.Property(e => e.RegisterDate).HasColumnType("date");

                entity.HasOne(d => d.Contract)
                    .WithMany(p => p.Folder)
                    .HasForeignKey(d => d.ContractId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Folder__Contract__74AE54BC");

                entity.HasOne(d => d.Contractor)
                    .WithMany(p => p.Folder)
                    .HasForeignKey(d => d.ContractorId)
                    .HasConstraintName("FK__Folder__Contract__73BA3083");

                entity.HasOne(d => d.FolderTypeNavigation)
                    .WithMany(p => p.Folder)
                    .HasForeignKey(d => d.FolderType)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Folder__FolderTy__1DB06A4F");
            });

            modelBuilder.Entity<FolderType>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.FolderTypeDescription)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<HiringData>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Caso).HasMaxLength(30);

                entity.Property(e => e.Cdp).HasMaxLength(50);

                entity.Property(e => e.Compromiso).HasMaxLength(100);

                entity.Property(e => e.Contrato).HasMaxLength(50);

                entity.Property(e => e.FechaDeComite).HasColumnType("date");

                entity.Property(e => e.FechaExaPreocupacional).HasColumnType("date");

                entity.Property(e => e.FechaExpedicionPoliza).HasColumnType("date");

                entity.Property(e => e.FechaFinalizacionConvenio).HasColumnType("date");

                entity.Property(e => e.FechaRealDeInicio).HasColumnType("date");

                entity.Property(e => e.NoPoliza).HasMaxLength(100);

                entity.Property(e => e.NumeroActa)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ValorAsegurado)
                    .HasColumnType("money")
                    .HasColumnName("ValorASegurado");

                entity.Property(e => e.VigenciaFinal).HasColumnType("date");

                entity.Property(e => e.VigenciaInicial).HasColumnType("date");

                entity.HasOne(d => d.Contractor)
                    .WithMany(p => p.HiringData)
                    .HasForeignKey(d => d.ContractorId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__HiringDat__Contr__72C60C4A");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.HiringData)
                    .HasForeignKey(d => d.UserId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__HiringDat__UserI__71D1E811");
            });

            modelBuilder.Entity<MinuteType>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.MinuteTypeDescription)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<NewnessContractor>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.RegisterDate).HasColumnType("date");

                entity.HasOne(d => d.Contract)
                    .WithMany(p => p.NewnessContractor)
                    .HasForeignKey(d => d.ContractId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__NewnessCo__Contr__06CD04F7");

                entity.HasOne(d => d.Contractor)
                    .WithMany(p => p.NewnessContractor)
                    .HasForeignKey(d => d.ContractorId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__NewnessCo__Contr__05D8E0BE");

                entity.HasOne(d => d.NewnessTypeNavigation)
                    .WithMany(p => p.NewnessContractor)
                    .HasForeignKey(d => d.NewnessType)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__NewnessCo__Newne__07C12930");
            });

            modelBuilder.Entity<NewnessType>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.NewnessDescription).HasMaxLength(200);
            });

            modelBuilder.Entity<Roll>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.RollName)
                    .IsRequired()
                    .HasMaxLength(30);
            });

            modelBuilder.Entity<RubroType>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Rubro)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.RubroNumber)
                    .IsRequired()
                    .HasMaxLength(30);
            });

            modelBuilder.Entity<StatusContract>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.StatusContractDescription)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<StatusContractor>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.StatusContractorDescription)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<StatusFile>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Category)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.StatusFileDescription)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<TermContract>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.StartDate).HasColumnType("date");

                entity.Property(e => e.TermDate).HasColumnType("date");

                entity.HasOne(d => d.DetailContractorNavigation)
                    .WithMany(p => p.TermContract)
                    .HasForeignKey(d => d.DetailContractor)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TermContr__Detai__1CBC4616");

                entity.HasOne(d => d.TermTypeNavigation)
                    .WithMany(p => p.TermContract)
                    .HasForeignKey(d => d.TermType)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TermContr__TermT__1BC821DD");
            });

            modelBuilder.Entity<TermType>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.TermDescription)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<UserFile>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.FileData).IsRequired();

                entity.Property(e => e.FileNameC).HasMaxLength(50);

                entity.Property(e => e.FileType).HasMaxLength(5);

                entity.Property(e => e.OwnerFirm).HasMaxLength(50);

                entity.HasOne(d => d.Roll)
                    .WithMany(p => p.UserFile)
                    .HasForeignKey(d => d.RollId)
                    .HasConstraintName("FK__UserFile__RollId__2180FB33");

                entity.HasOne(d => d.UserFileTypeNavigation)
                    .WithMany(p => p.UserFile)
                    .HasForeignKey(d => d.UserFileType)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__UserFile__UserFi__22751F6C");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.UserFile)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK__UserFile__UserId__236943A5");
            });

            modelBuilder.Entity<UserFileType>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.FileTypeDescription)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<UserT>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Identification)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PasswordMail)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.PhoneNumber).HasMaxLength(15);

                entity.Property(e => e.Professionalposition).IsRequired();

                entity.Property(e => e.UserEmail)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.UserName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.UserPassword)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.HasOne(d => d.Roll)
                    .WithMany(p => p.UserT)
                    .HasForeignKey(d => d.RollId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__UserT__RollId__01142BA1");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}