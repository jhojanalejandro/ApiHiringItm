// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using WebApiHiringItm.MODEL.Entities;

namespace WebApiHiringItm.CONTEXT.Context
{
    public partial class Hiring_V1Context : DbContext,IHiring_V1Context
    {
        public Hiring_V1Context()
        {
        }

        public Hiring_V1Context(DbContextOptions<Hiring_V1Context> options)
            : base(options)
        {
        }

        public virtual DbSet<Actividad> Actividad { get; set; }
        public virtual DbSet<Componente> Componente { get; set; }
        public virtual DbSet<Contractor> Contractor { get; set; }
        public virtual DbSet<ContractorPayments> ContractorPayments { get; set; }
        public virtual DbSet<DetailProjectContractor> DetailProjectContractor { get; set; }
        public virtual DbSet<DetalleContrato> DetalleContrato { get; set; }
        public virtual DbSet<DetalleFile> DetalleFile { get; set; }
        public virtual DbSet<EconomicdataContractor> EconomicdataContractor { get; set; }
        public virtual DbSet<ElementosComponente> ElementosComponente { get; set; }
        public virtual DbSet<Files> Files { get; set; }
        public virtual DbSet<FolderContractor> FolderContractor { get; set; }
        public virtual DbSet<HiringData> HiringData { get; set; }
        public virtual DbSet<ProjectFolder> ProjectFolder { get; set; }
        public virtual DbSet<Roll> Roll { get; set; }
        public virtual DbSet<SharedData> SharedData { get; set; }
        public virtual DbSet<UserFirm> UserFirm { get; set; }
        public virtual DbSet<UserT> UserT { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Actividad>(entity =>
            {
                entity.Property(e => e.NombreActividad)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.HasOne(d => d.IdComponenteNavigation)
                    .WithMany(p => p.Actividad)
                    .HasForeignKey(d => d.IdComponente)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Actividad__IdCom__440B1D61");
            });

            modelBuilder.Entity<Componente>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.NombreComponente)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.HasOne(d => d.IdContratoNavigation)
                    .WithMany(p => p.Componente)
                    .HasForeignKey(d => d.IdContrato)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Component__IdCon__4E88ABD4");
            });

            modelBuilder.Entity<Contractor>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Administradora).IsUnicode(false);

                entity.Property(e => e.Apellido)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Barrio)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Celular)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ClaveUsuario).HasMaxLength(15);

                entity.Property(e => e.Codigo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Convenio)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.Correo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CuentaBancaria).HasMaxLength(100);

                entity.Property(e => e.Departamento)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Direccion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Doctorado)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EntidadCuentaBancaria).HasMaxLength(50);

                entity.Property(e => e.Especializacion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Estado).HasMaxLength(50);

                entity.Property(e => e.FechaActualizacion).HasColumnType("date");

                entity.Property(e => e.FechaCreacion).HasColumnType("date");

                entity.Property(e => e.FechaFin)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FechaInicio)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FechaNacimiento).HasColumnType("date");

                entity.Property(e => e.Genero)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Identificacion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.LugarExpedicion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Maestria)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Municipio)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Nacionalidad)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Pregrado)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Tecnico)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Tecnologo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Telefono)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TipoAdministradora).IsUnicode(false);

                entity.Property(e => e.TipoContratacion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TipoCuenta).HasMaxLength(50);

                entity.HasOne(d => d.Contract)
                    .WithMany(p => p.Contractor)
                    .HasForeignKey(d => d.ContractId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Contracto__Contr__48CFD27E");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Contractor)
                    .HasForeignKey(d => d.UserId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Contracto__UserI__47DBAE45");
            });

            modelBuilder.Entity<ContractorPayments>(entity =>
            {
                entity.Property(e => e.FromDate).HasColumnType("date");

                entity.Property(e => e.Paymentcant).HasColumnType("money");

                entity.Property(e => e.ToDate).HasColumnType("date");

                entity.HasOne(d => d.Contract)
                    .WithMany(p => p.ContractorPayments)
                    .HasForeignKey(d => d.ContractId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Contracto__Contr__04E4BC85");

                entity.HasOne(d => d.Contractor)
                    .WithMany(p => p.ContractorPayments)
                    .HasForeignKey(d => d.ContractorId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Contracto__Contr__02FC7413");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.ContractorPayments)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK__Contracto__UserI__03F0984C");
            });

            modelBuilder.Entity<DetailProjectContractor>(entity =>
            {
                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("id");

                entity.Property(e => e.ContractId).HasColumnName("contractId");

                entity.Property(e => e.ContractorId).HasColumnName("contractorId");

                entity.HasOne(d => d.Componente)
                    .WithMany(p => p.DetailProjectContractor)
                    .HasForeignKey(d => d.ComponenteId)
                    .HasConstraintName("FK__DetailPro__Compo__628FA481");

                entity.HasOne(d => d.Contract)
                    .WithMany(p => p.DetailProjectContractor)
                    .HasForeignKey(d => d.ContractId)
                    .HasConstraintName("FK__DetailPro__contr__5EBF139D");

                entity.HasOne(d => d.Contractor)
                    .WithMany(p => p.DetailProjectContractor)
                    .HasForeignKey(d => d.ContractorId)
                    .HasConstraintName("FK__DetailPro__contr__5FB337D6");

                entity.HasOne(d => d.Element)
                    .WithMany(p => p.DetailProjectContractor)
                    .HasForeignKey(d => d.ElementId)
                    .HasConstraintName("FK__DetailPro__Eleme__619B8048");

                entity.HasOne(d => d.HiringData)
                    .WithMany(p => p.DetailProjectContractor)
                    .HasForeignKey(d => d.HiringDataId)
                    .HasConstraintName("FK__DetailPro__Hirin__60A75C0F");
            });

            modelBuilder.Entity<DetalleContrato>(entity =>
            {
                entity.Property(e => e.FechaContrato).HasColumnType("date");

                entity.Property(e => e.FechaDeTerminacionAmpliacion).HasColumnType("date");

                entity.Property(e => e.FechaFinalizacion).HasColumnType("date");

                entity.Property(e => e.FechaInicioAmpliacion).HasColumnType("date");

                entity.Property(e => e.NoAdicion).HasMaxLength(20);

                entity.Property(e => e.TipoContrato)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdcontratoNavigation)
                    .WithMany(p => p.DetalleContrato)
                    .HasForeignKey(d => d.Idcontrato)
                    .HasConstraintName("FK__DetalleCo__Idcon__5441852A");
            });

            modelBuilder.Entity<DetalleFile>(entity =>
            {
                entity.Property(e => e.Observation).IsUnicode(false);

                entity.Property(e => e.Reason)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.File)
                    .WithMany(p => p.DetalleFile)
                    .HasForeignKey(d => d.FileId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__DetalleFi__FileI__0A9D95DB");
            });

            modelBuilder.Entity<EconomicdataContractor>(entity =>
            {
                entity.Property(e => e.Debt).HasColumnType("money");

                entity.Property(e => e.Freed).HasColumnType("money");

                entity.Property(e => e.Missing).HasColumnType("money");

                entity.Property(e => e.ModifyDate).HasColumnType("date");

                entity.Property(e => e.RegisterDate).HasColumnType("date");

                entity.Property(e => e.TotalPaidMonth).HasColumnType("money");

                entity.Property(e => e.TotalValue).HasColumnType("money");

                entity.Property(e => e.UnitValue).HasColumnType("money");

                entity.HasOne(d => d.Contract)
                    .WithMany(p => p.EconomicdataContractor)
                    .HasForeignKey(d => d.ContractId)
                    .HasConstraintName("FK__Economicd__Contr__6E01572D");

                entity.HasOne(d => d.Contractor)
                    .WithMany(p => p.EconomicdataContractor)
                    .HasForeignKey(d => d.ContractorId)
                    .HasConstraintName("FK__Economicd__Contr__52593CB8");
            });

            modelBuilder.Entity<ElementosComponente>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Consecutivo)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Cpc).HasMaxLength(30);

                entity.Property(e => e.NombreCpc).HasMaxLength(50);

                entity.Property(e => e.NombreElemento).HasMaxLength(100);

                entity.Property(e => e.ObjetoElemento).IsUnicode(false);

                entity.Property(e => e.ObligacionesEspecificas).IsUnicode(false);

                entity.Property(e => e.ObligacionesGenerales).IsUnicode(false);

                entity.Property(e => e.Recursos).HasColumnType("money");

                entity.Property(e => e.TipoElemento)
                    .HasMaxLength(50)
                    .HasColumnName("tipoElemento");

                entity.Property(e => e.ValorPorDia).HasColumnType("money");

                entity.Property(e => e.ValorPorDiaContratista).HasColumnType("money");

                entity.Property(e => e.ValorTotal).HasColumnType("money");

                entity.Property(e => e.ValorTotalContratista).HasColumnType("money");

                entity.Property(e => e.ValorUnidad).HasColumnType("money");

                entity.HasOne(d => d.IdComponenteNavigation)
                    .WithMany(p => p.ElementosComponente)
                    .HasForeignKey(d => d.IdComponente)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Elementos__IdCom__534D60F1");
            });

            modelBuilder.Entity<Files>(entity =>
            {
                entity.Property(e => e.DescriptionFile).HasMaxLength(100);

                entity.Property(e => e.FilesName).HasMaxLength(100);

                entity.Property(e => e.MonthPayment).HasMaxLength(10);

                entity.Property(e => e.RegisterDate).HasColumnType("date");

                entity.Property(e => e.TypeFile).HasMaxLength(10);

                entity.Property(e => e.TypeFilePayment).HasMaxLength(50);

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Files)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK__Files__UserId__09A971A2");
            });

            modelBuilder.Entity<FolderContractor>(entity =>
            {
                entity.Property(e => e.FolderName)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.ModifyDate).HasColumnType("date");

                entity.Property(e => e.RegisterDate).HasColumnType("date");

                entity.HasOne(d => d.Contract)
                    .WithMany(p => p.FolderContractor)
                    .HasForeignKey(d => d.ContractId)
                    .HasConstraintName("FK__FolderCon__Contr__66603565");

                entity.HasOne(d => d.Contractor)
                    .WithMany(p => p.FolderContractor)
                    .HasForeignKey(d => d.ContractorId)
                    .HasConstraintName("FK__FolderCon__Contr__656C112C");
            });

            modelBuilder.Entity<HiringData>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.CargoSupervisorItm).HasMaxLength(100);

                entity.Property(e => e.IdentificacionSupervisor).HasMaxLength(50);

                entity.Property(e => e.Cdp).HasMaxLength(50);

                entity.Property(e => e.Compromiso).HasMaxLength(100);

                entity.Property(e => e.Contrato).HasMaxLength(50);

                entity.Property(e => e.FechaDeComite).HasColumnType("date");

                entity.Property(e => e.FechaExaPreocupacional).HasColumnType("date");

                entity.Property(e => e.FechaExpedicionPoliza).HasColumnType("date");

                entity.Property(e => e.FechaFinalizacionConvenio).HasColumnType("date");

                entity.Property(e => e.FechaRealDeInicio).HasColumnType("date");

                entity.Property(e => e.FuenteRubro)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NoPoliza).HasMaxLength(100);

                entity.Property(e => e.NombreRubro).HasMaxLength(50);

                entity.Property(e => e.NumeroActa)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Rubro).HasMaxLength(30);

                entity.Property(e => e.SupervisorItm).HasMaxLength(50);

                entity.Property(e => e.ValorAsegurado)
                    .HasColumnType("money")
                    .HasColumnName("ValorASegurado");

                entity.Property(e => e.VigenciaFinal).HasColumnType("date");

                entity.Property(e => e.VigenciaInicial).HasColumnType("date");

                entity.HasOne(d => d.Contractor)
                    .WithMany(p => p.HiringData)
                    .HasForeignKey(d => d.ContractorId)
                    .HasConstraintName("FK__HiringDat__Contr__45F365D3");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.HiringData)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK__HiringDat__UserI__44FF419A");
            });

            modelBuilder.Entity<ProjectFolder>(entity =>
            {
                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("id");

                entity.Property(e => e.CompanyName)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.GastosOperativos).HasColumnType("money");

                entity.Property(e => e.NumberProject)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ProjectName)
                    .IsRequired()
                    .HasMaxLength(300);

                entity.Property(e => e.ValorContrato).HasColumnType("money");

                entity.Property(e => e.ValorSubTotal).HasColumnType("money");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.ProjectFolder)
                    .HasForeignKey(d => d.UserId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ProjectFo__UserI__4316F928");
            });

            modelBuilder.Entity<Roll>(entity =>
            {
                entity.Property(e => e.RollName)
                    .IsRequired()
                    .HasMaxLength(30);
            });

            modelBuilder.Entity<SharedData>(entity =>
            {
                entity.ToTable("sharedData");

                entity.Property(e => e.TypeDataShare).HasMaxLength(30);

                entity.Property(e => e.TypedataRegistered).HasMaxLength(100);
            });

            modelBuilder.Entity<UserFirm>(entity =>
            {
                entity.Property(e => e.FirmUser).HasMaxLength(50);
            });

            modelBuilder.Entity<UserT>(entity =>
            {
                entity.Property(e => e.Identification)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PhoneNumber).HasMaxLength(15);

                entity.Property(e => e.UserEmail)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.UserName)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.UserPassword)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.HasOne(d => d.Roll)
                    .WithMany(p => p.UserT)
                    .HasForeignKey(d => d.RollId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__UserT__RollId__4F7CD00D");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}